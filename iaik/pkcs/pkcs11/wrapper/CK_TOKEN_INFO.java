package iaik.pkcs.pkcs11.wrapper;

public class CK_TOKEN_INFO {
   public char[] label;
   public char[] manufacturerID;
   public char[] model;
   public char[] serialNumber;
   public long flags;
   public long ulMaxSessionCount;
   public long ulSessionCount;
   public long ulMaxRwSessionCount;
   public long ulRwSessionCount;
   public long ulMaxPinLen;
   public long ulMinPinLen;
   public long ulTotalPublicMemory;
   public long ulFreePublicMemory;
   public long ulTotalPrivateMemory;
   public long ulFreePrivateMemory;
   public CK_VERSION hardwareVersion;
   public CK_VERSION firmwareVersion;
   public char[] utcTime;

   public String toString() {
      StringBuffer buffer = new StringBuffer();
      buffer.append("  ");
      buffer.append("label: ");
      buffer.append(new String(this.label));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("manufacturerID: ");
      buffer.append(new String(this.manufacturerID));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("model: ");
      buffer.append(new String(this.model));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("serialNumber: ");
      buffer.append(new String(this.serialNumber));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("flags: ");
      buffer.append(Functions.tokenInfoFlagsToString(this.flags));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulMaxSessionCount: ");
      buffer.append(this.ulMaxSessionCount == 0L ? "CK_EFFECTIVELY_INFINITE" : (this.ulMaxSessionCount == 4294967295L ? "CK_UNAVAILABLE_INFORMATION" : String.valueOf(this.ulMaxSessionCount)));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulSessionCount: ");
      buffer.append(this.ulSessionCount == 4294967295L ? "CK_EFFECTIVELY_INFINITE" : String.valueOf(this.ulSessionCount));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulMaxRwSessionCount: ");
      buffer.append(this.ulMaxRwSessionCount == 0L ? "CK_EFFECTIVELY_INFINITE" : (this.ulMaxRwSessionCount == 4294967295L ? "CK_UNAVAILABLE_INFORMATION" : String.valueOf(this.ulMaxRwSessionCount)));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulRwSessionCount: ");
      buffer.append(this.ulRwSessionCount == 4294967295L ? "CK_EFFECTIVELY_INFINITE" : String.valueOf(this.ulRwSessionCount));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulMaxPinLen: ");
      buffer.append(String.valueOf(this.ulMaxPinLen));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulMinPinLen: ");
      buffer.append(String.valueOf(this.ulMinPinLen));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulTotalPublicMemory: ");
      buffer.append(this.ulTotalPublicMemory == 4294967295L ? "CK_UNAVAILABLE_INFORMATION" : String.valueOf(this.ulTotalPublicMemory));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulFreePublicMemory: ");
      buffer.append(this.ulFreePublicMemory == 4294967295L ? "CK_UNAVAILABLE_INFORMATION" : String.valueOf(this.ulFreePublicMemory));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulTotalPrivateMemory: ");
      buffer.append(this.ulTotalPrivateMemory == 4294967295L ? "CK_UNAVAILABLE_INFORMATION" : String.valueOf(this.ulTotalPrivateMemory));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("ulFreePrivateMemory: ");
      buffer.append(this.ulFreePrivateMemory == 4294967295L ? "CK_UNAVAILABLE_INFORMATION" : String.valueOf(this.ulFreePrivateMemory));
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("hardwareVersion: ");
      buffer.append(this.hardwareVersion.toString());
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("firmwareVersion: ");
      buffer.append(this.firmwareVersion.toString());
      buffer.append(Constants.NEWLINE);
      buffer.append("  ");
      buffer.append("utcTime: ");
      buffer.append(new String(this.utcTime));
      return buffer.toString();
   }
}
